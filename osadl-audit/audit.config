### DEFINITIONS FOR THE OSADL LICENSE COMPLIANCE AUDIT SCRIPT ###
[database]

## PostgreSQL connection information
postgresql_user     = osadl
postgresql_password = osadl
postgresql_db       = osadl

[audit]
## The 'scanlicense' attribute can be set to indicate whether or not
## files that were not found in the database should be scanned using
## ScanCode and FOSSology. This requires that ScanCode and FOSSology are
## installed
scanlicense = yes
nomossapath = /home/armijn/git/fossology/src/nomos/agent/nomossa
scancodepath = /home/armijn/git/scancode-toolkit/scancode

## The 'verbose' parameter is to let the script(s) be more verbose
## like this comment.
verbose = yes

## a set of case sensitive extensions for files that should be looked at.
extensions = .c:.h:.S:.dts:.dtsi:.l:.y:.cocci:.sh:.py:.pl

## Enable the use of TLSH for similarity matching (default: no)
#usetlsh = yes
usetlsh = no

## The maximum TLSH score that should be used to report similar files.
## For explanations see https://github.com/trendmicro/tlsh
tlshcutoff = 100

## The amount of processers to use for the script. By default it uses all
## the available CPUs/cores/threads
#processors = 8

### DEFINITIONS FOR THE DATABASE CREATION SCRIPT ###
[createdatabase]
## The amount of processers to use for the script. By default it uses all
## the available CPUs/cores/threads
#processors = 8

## location of a directory in which temporary directories are created in
## which the tarballs are unpacked. By default this is /tmp. On systems
## where /tmp is not big enough (for example tmpfs is used for /tmp and
## there is limited memory) it is advised to change this.
#unpackdirectory = /tmp

## setting to control whether or not results should be written to a caching
## director as JSON. Needs cachedirectory to be defined to work.
#cacheresults = yes
## location of a directory where to cache results of the database process
## to avoid unpacking the Linux kernel archives. This is only
#cachedirectory = /home/armijn/kernel/json
